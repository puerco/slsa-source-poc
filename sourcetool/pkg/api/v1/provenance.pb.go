// SPDX-FileCopyrightText: Copyright 2025 The SLSA Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: provenance.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The predicate that encodes source provenance data.
// The git commit this corresponds to is encoded in the surrounding statement.
type Predicate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The commit preceding 'Commit' in the current context.
	PrevCommit   string                 `protobuf:"bytes,1,opt,name=prev_commit,json=prevCommit,proto3" json:"prev_commit,omitempty"`
	RepoUri      string                 `protobuf:"bytes,2,opt,name=repo_uri,json=repoUri,proto3" json:"repo_uri,omitempty"`
	ActivityType string                 `protobuf:"bytes,3,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	Actor        string                 `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	Branch       string                 `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`
	CreatedOn    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_on,json=createdOn,proto3,oneof" json:"created_on,omitempty"` // TODO: get the author of the PR (if this was from a PR).
	// The controls enabled at the time this commit was pushed.
	Controls      []*Control `protobuf:"bytes,7,rep,name=controls,proto3" json:"controls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Predicate) Reset() {
	*x = Predicate{}
	mi := &file_provenance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Predicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Predicate) ProtoMessage() {}

func (x *Predicate) ProtoReflect() protoreflect.Message {
	mi := &file_provenance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Predicate.ProtoReflect.Descriptor instead.
func (*Predicate) Descriptor() ([]byte, []int) {
	return file_provenance_proto_rawDescGZIP(), []int{0}
}

func (x *Predicate) GetPrevCommit() string {
	if x != nil {
		return x.PrevCommit
	}
	return ""
}

func (x *Predicate) GetRepoUri() string {
	if x != nil {
		return x.RepoUri
	}
	return ""
}

func (x *Predicate) GetActivityType() string {
	if x != nil {
		return x.ActivityType
	}
	return ""
}

func (x *Predicate) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *Predicate) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Predicate) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *Predicate) GetControls() []*Control {
	if x != nil {
		return x.Controls
	}
	return nil
}

type Control struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the control
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The time from which this control has been continuously enforced/observed.
	Since         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=since,proto3" json:"since,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Control) Reset() {
	*x = Control{}
	mi := &file_provenance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Control) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Control) ProtoMessage() {}

func (x *Control) ProtoReflect() protoreflect.Message {
	mi := &file_provenance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Control.ProtoReflect.Descriptor instead.
func (*Control) Descriptor() ([]byte, []int) {
	return file_provenance_proto_rawDescGZIP(), []int{1}
}

func (x *Control) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Control) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

var File_provenance_proto protoreflect.FileDescriptor

const file_provenance_proto_rawDesc = "" +
	"\n" +
	"\x10provenance.proto\x12\bampel.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x98\x02\n" +
	"\tPredicate\x12\x1f\n" +
	"\vprev_commit\x18\x01 \x01(\tR\n" +
	"prevCommit\x12\x19\n" +
	"\brepo_uri\x18\x02 \x01(\tR\arepoUri\x12#\n" +
	"\ractivity_type\x18\x03 \x01(\tR\factivityType\x12\x14\n" +
	"\x05actor\x18\x04 \x01(\tR\x05actor\x12\x16\n" +
	"\x06branch\x18\x05 \x01(\tR\x06branch\x12>\n" +
	"\n" +
	"created_on\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\tcreatedOn\x88\x01\x01\x12-\n" +
	"\bcontrols\x18\a \x03(\v2\x11.ampel.v1.ControlR\bcontrolsB\r\n" +
	"\v_created_on\"O\n" +
	"\aControl\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x05since\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x05sinceB\xa1\x01\n" +
	"\fcom.ampel.v1B\x0fProvenanceProtoP\x01Z?github.com/slsa-framework/slsa-source-poc/sourcetool/pkg/api/v1\xa2\x02\x03AXX\xaa\x02\bAmpel.V1\xca\x02\bAmpel\\V1\xe2\x02\x14Ampel\\V1\\GPBMetadata\xea\x02\tAmpel::V1b\x06proto3"

var (
	file_provenance_proto_rawDescOnce sync.Once
	file_provenance_proto_rawDescData []byte
)

func file_provenance_proto_rawDescGZIP() []byte {
	file_provenance_proto_rawDescOnce.Do(func() {
		file_provenance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_provenance_proto_rawDesc), len(file_provenance_proto_rawDesc)))
	})
	return file_provenance_proto_rawDescData
}

var file_provenance_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_provenance_proto_goTypes = []any{
	(*Predicate)(nil),             // 0: ampel.v1.Predicate
	(*Control)(nil),               // 1: ampel.v1.Control
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_provenance_proto_depIdxs = []int32{
	2, // 0: ampel.v1.Predicate.created_on:type_name -> google.protobuf.Timestamp
	1, // 1: ampel.v1.Predicate.controls:type_name -> ampel.v1.Control
	2, // 2: ampel.v1.Control.since:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_provenance_proto_init() }
func file_provenance_proto_init() {
	if File_provenance_proto != nil {
		return
	}
	file_provenance_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_provenance_proto_rawDesc), len(file_provenance_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_provenance_proto_goTypes,
		DependencyIndexes: file_provenance_proto_depIdxs,
		MessageInfos:      file_provenance_proto_msgTypes,
	}.Build()
	File_provenance_proto = out.File
	file_provenance_proto_goTypes = nil
	file_provenance_proto_depIdxs = nil
}
